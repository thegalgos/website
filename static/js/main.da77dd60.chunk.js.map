{"version":3,"sources":["logo.svg","Stats.js","features/settings/settingsSlice.js","Home.js","Collection.js","Roadmap.js","NftDetails.js","CommingSoon.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["Stats","settingsSlice","createSlice","name","initialState","topNotification","message","show","reducers","showTopNotification","state","hideTopNotification","actions","Home","gql","Roadmap","CommingSoon","class","alt","src","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","settings","settingsReducer","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","ApolloProvider","store","document","getElementById"],"mappings":"kKAAe,I,YC4CAA,I,gBC1CFC,EAAgBC,YAAa,CACtCC,KAAM,WACNC,aAAc,CACVC,gBAAiB,CACbC,QAAS,kEACTC,MAAM,IAGdC,SAAU,CACNC,oBAAqB,SAACC,GAClBA,EAAML,gBAAgBE,MAAO,GAEjCI,oBAAqB,SAACD,GAClBA,EAAML,gBAAgBE,MAAO,MAKlC,EAAqDN,EAAcW,QAE3DX,GAFR,EAAQQ,oBAAR,EAA6BE,oBAErBV,EAAf,SCbeY,I,iBCRFC,YAAH,iKCkHKC,I,cChHKD,YAAH,qOCkBFE,I,MAAAA,EArBf,WACI,OACI,gCACA,yBAASC,MAAM,sCAAf,SAEI,sBAAKA,MAAM,yEAAX,UACI,qBAAKA,MAAM,qEAAqEC,IAAI,OAAOC,IAAI,uCAC/F,oBAAIF,MAAM,sBAAV,wBACA,sBAAKA,MAAM,mBAAX,UACI,oBAAIA,MAAM,+CAAV,wCACA,mBAAGA,MAAM,qDAAT,sCAIZ,yBAASA,MAAM,oCAAf,SACI,qBAAKA,MAAM,OAAOE,IAAI,mC,oBCKXL,YAAH,iKAaDA,YAAH,6MASiBA,YAAH,oGA2EfM,ICzGAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2DCJCQ,cAAe,CAC1BC,QAAS,CACLC,SAAUC,KCWZC,EAAW,IAAIC,IAAS,CAC5BC,IAAK,qCAGDC,EAAS,IAAIC,IAAc,CAC/BF,IAAK,iCACLG,QAAS,CACPC,WAAW,KAITC,EAAYC,iBAChB,YAAgB,IAAbC,EAAY,EAAZA,MACKC,EAAaC,YAAkBF,GACrC,MACsB,wBAApBC,EAAWE,MACc,iBAAzBF,EAAWG,YAGfV,EACAH,GAGIc,EAAS,IAAIC,IAAa,CAC9BC,KAAMT,EACNU,MAAO,IAAIC,MAIbC,IAASC,OACP,cAACC,EAAA,EAAD,CAAgBP,OAAQA,EAAxB,SACE,cAAC,IAAD,CAAUQ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BrC,K","file":"static/js/main.da77dd60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function Stats() {\n    return (<section class=\"text-gray-400 bg-gray-900 body-font\">\n    <div class=\"max-w-7xl px-5 py-24 mx-auto\">\n      <div class=\"flex flex-col text-center w-full mb-20\">\n        <h1 class=\"sm:text-3xl text-2xl font-medium title-font mb-4 text-white\">Be part of our growth</h1>\n        <p class=\"lg:w-2/3 mx-auto leading-relaxed text-base\">Every day we add new unique NFT that you can add to your collection..</p>\n      </div>\n      <div class=\"flex flex-wrap -m-4 text-center\">\n        <div class=\"p-4 md:w-1/3 w-full\">\n          <div class=\"border-2 border-gray-800 px-4 py-6 rounded-lg\">\n            <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"text-indigo-400 w-12 h-12 mb-3 inline-block\" viewBox=\"0 0 24 24\">\n              <path d=\"M8 17l4 4 4-4m-4-5v9\"></path>\n              <path d=\"M20.88 18.09A5 5 0 0018 9h-1.26A8 8 0 103 16.29\"></path>\n            </svg>\n            <h2 class=\"title-font font-medium text-3xl text-white\">0</h2>\n            <p class=\"leading-relaxed\">Minted</p>\n          </div>\n        </div>\n        <div class=\"p-4 md:w-1/3 w-full\">\n          <div class=\"border-2 border-gray-800 px-4 py-6 rounded-lg\">\n            <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"text-indigo-400 w-12 h-12 mb-3 inline-block\" viewBox=\"0 0 24 24\">\n              <path d=\"M17 21v-2a4 4 0 00-4-4H5a4 4 0 00-4 4v2\"></path>\n              <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\n              <path d=\"M23 21v-2a4 4 0 00-3-3.87m-4-12a4 4 0 010 7.75\"></path>\n            </svg>\n            <h2 class=\"title-font font-medium text-3xl text-white\">0</h2>\n            <p class=\"leading-relaxed\">Owners</p>\n          </div>\n        </div>\n        <div class=\"p-4 md:w-1/3 w-full\">\n          <div class=\"border-2 border-gray-800 px-4 py-6 rounded-lg\">\n            <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"text-indigo-400 w-12 h-12 mb-3 inline-block\" viewBox=\"0 0 24 24\">\n              <path d=\"M3 18v-6a9 9 0 0118 0v6\"></path>\n              <path d=\"M21 19a2 2 0 01-2 2h-1a2 2 0 01-2-2v-3a2 2 0 012-2h3zM3 19a2 2 0 002 2h1a2 2 0 002-2v-3a2 2 0 00-2-2H3z\"></path>\n            </svg>\n            <h2 class=\"title-font font-medium text-3xl text-white\">74</h2>\n            <p class=\"leading-relaxed\">Files</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>)\n}\n\nexport default Stats;","import { createSlice } from '@reduxjs/toolkit'\n\nexport const settingsSlice = createSlice ({\n    name: 'settings',\n    initialState: {\n        topNotification: {\n            message: 'Pre-sale phase 1 is open. You can start collection your Galgos!',\n            show: false\n        }\n    },\n    reducers: {\n        showTopNotification: (state) => {\n            state.topNotification.show = true;\n        },\n        hideTopNotification: (state) => {\n            state.topNotification.show = false;\n        },\n    },\n})\n\nexport const { showTopNotification, hideTopNotification } = settingsSlice.actions\n\nexport default settingsSlice.reducer","function Home () {\n    return <div class=\"max-w-7xl mx-auto p-10 bg-gray-500\">\n        <div class=\"\">\n            <p>Sales are open! Enjoy your Galgo collecting</p>\n        </div>\n\n    </div>\n}\n\nexport default Home;","import { useQuery, useMutation, useSubscription, gql } from '@apollo/client';\nconst NFTS = gql`\nquery nfts {\n  nft(order_by: {name: asc}) {\n    id\n    name\n    price\n    available\n    total_supplay\n    source_image\n  }\n}`;\n\nfunction CollectionItem(props) {\n    return (<div class=\"bg-black p-4\">\n        <a href={`/nft-details/${props.item.id}`} class=\"rounded-xl shadow-lg max-w-max mx-auto group overflow-hidden block\">\n            <img class=\"transform transition duration-1000 ease-out group-hover:scale-150 w-full\" src={\"/images/nfts/524/\" + props.item.source_image + \".png\"} />\n        </a>\n        <div class=\"mt-4 flex items-center justify-between  text-white\"><span class=\"font-bold text-md\">{props.item.name}</span>\n            <span class=\"hidden text-xs border-gray-500 border rounded-md px-4 py-2\">addr1qyvf...asqwhjmt5</span>\n            \n        </div>\n        <div class=\"mt-2 flex justify-between  text-white\">\n            {\n                props.item.available > 0\n                    ? <button class=\"shadow-lg bg-blue-800 px-6 text-sm rounded-full\">Collect</button>\n                    : <button class=\"shadow-lg bg-yellow-800 px-6 text-sm rounded-full\">Sold Out</button>\n            }\n            <span class=\"text-sm border-white py-2 font-bold\">{props.item.total_supplay} left</span>\n        </div>\n        \n\n    </div>);\n}\n\nfunction Collection() {\n    const { loading, error, data } = useQuery(NFTS);\n    if (loading) {\n        return <p>Loading...</p>\n    }\n\n    if (error) {\n        return <div className=\"bg-gray-900\">\n            <div className=\"text-gray-400 mx-auto max-w-7xl p-6\">\n                <p>Error. Please refresh.</p>\n            </div></div>\n    }\n    return (\n        <div className=\"bg-gray-900\">\n            <div className=\"text-gray-400 mx-auto max-w-7xl p-6\">\n                <h2 className=\"text-4xl text-white font-extrabold mb-10\">Collection</h2>\n\n                <div class=\"md:max-w-7xl mx-auto grid gap-10 grid-rows-1 grid-cols-1 sm:grid-cols-2 xl:grid-cols-4\">\n                    {data.nft.map((item, _) => <CollectionItem item={item} />)}\n                </div>\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default Collection;","function Roadmap() {\n    return (\n        <div className=\"bg-gray-900\">\n            <div className=\"text-gray-400 mx-auto max-w-7xl p-6\">\n                <h2 className=\"text-4xl text-white font-extrabold mb-10\">Roadmap</h2>\n                <section class=\"text-gray-400 bg-gray-900 body-font\">\n                    <div class=\"px-5 py-10 flex flex-wrap\">\n                        <div class=\"flex relative pb-20 sm:items-center w-full\">\n                            <div class=\"h-full w-6 absolute inset-0 flex items-center justify-center\">\n                                <div class=\"h-full w-1 bg-gray-800 pointer-events-none\"></div>\n                            </div>\n                            <div class=\"flex-shrink-0 w-6 h-6 rounded-full mt-10 sm:mt-0 inline-flex items-center justify-center bg-indigo-500 text-white relative z-10 title-font font-medium text-sm\">1</div>\n                            <div class=\"flex-grow md:pl-8 pl-6 flex sm:items-center items-start flex-col sm:flex-row\">\n                                <div class=\"flex-shrink-0 w-24 h-24 bg-gray-800 text-indigo-400 rounded-full inline-flex items-center justify-center\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                                    </svg>\n                                </div>\n                                <div class=\"flex-grow sm:pl-6 mt-6 sm:mt-0\">\n                                    <h2 class=\"font-medium title-font text-white mb-1 text-xl\">Pre-sale phase 1</h2>\n                                    <p class=\"leading-relaxed\">An initial set of 100 NFTs will be released.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"flex relative pb-20 sm:items-center\">\n                            <div class=\"h-full w-6 absolute inset-0 flex items-center justify-center\">\n                                <div class=\"h-full w-1 bg-gray-800 pointer-events-none\"></div>\n                            </div>\n                            <div class=\"flex-shrink-0 w-6 h-6 rounded-full mt-10 sm:mt-0 inline-flex items-center justify-center bg-indigo-500 text-white relative z-10 title-font font-medium text-sm\">2</div>\n                            <div class=\"flex-grow md:pl-8 pl-6 flex sm:items-center items-start flex-col sm:flex-row\">\n                                <div class=\"flex-shrink-0 w-24 h-24 bg-gray-800 text-indigo-400 rounded-full inline-flex items-center justify-center\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                                    </svg>\n                                </div>\n                                <div class=\"flex-grow sm:pl-6 mt-6 sm:mt-0\">\n                                    <h2 class=\"font-medium title-font text-white mb-1 text-xl\">Pre-sale phase 2</h2>\n                                    <p class=\"leading-relaxed\">A second pack of 100 NFTs will be released.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"flex relative pb-20 sm:items-center\">\n                            <div class=\"h-full w-6 absolute inset-0 flex items-center justify-center\">\n                                <div class=\"h-full w-1 bg-gray-800 pointer-events-none\"></div>\n                            </div>\n                            <div class=\"flex-shrink-0 w-6 h-6 rounded-full mt-10 sm:mt-0 inline-flex items-center justify-center bg-indigo-500 text-white relative z-10 title-font font-medium text-sm\">3</div>\n                            <div class=\"flex-grow md:pl-8 pl-6 flex sm:items-center items-start flex-col sm:flex-row\">\n                                <div class=\"flex-shrink-0 w-24 h-24 bg-gray-800 text-indigo-400 rounded-full inline-flex items-center justify-center\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                                    </svg>\n                                </div>\n                                <div class=\"flex-grow sm:pl-6 mt-6 sm:mt-0\">\n                                    <h2 class=\"font-medium title-font text-white mb-1 text-xl\">Smart contract deployment</h2>\n                                    <p class=\"leading-relaxed\">We will laverage Smart Contracts to provide trading and auctions functionality.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"flex relative pb-20 sm:items-center w-full\">\n                            <div class=\"h-full w-6 absolute inset-0 flex items-center justify-center\">\n                                <div class=\"h-full w-1 bg-gray-800 pointer-events-none\"></div>\n                            </div>\n                            <div class=\"flex-shrink-0 w-6 h-6 rounded-full mt-10 sm:mt-0 inline-flex items-center justify-center bg-indigo-500 text-white relative z-10 title-font font-medium text-sm\">4</div>\n                            <div class=\"flex-grow md:pl-8 pl-6 flex sm:items-center items-start flex-col sm:flex-row\">\n                                <div class=\"flex-shrink-0 w-24 h-24 bg-gray-800 text-indigo-400 rounded-full inline-flex items-center justify-center\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                                    </svg>\n                                </div>\n                                <div class=\"flex-grow sm:pl-6 mt-6 sm:mt-0\">\n                                    <h2 class=\"font-medium title-font text-white mb-1 text-xl\">Undisclosed phase 1</h2>\n                                    <p class=\"leading-relaxed\">Something special will be here!</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"flex relative pb-20 sm:items-center  w-full\">\n                            <div class=\"h-full w-6 absolute inset-0 flex items-center justify-center\">\n                                <div class=\"h-full w-1 bg-gray-800 pointer-events-none\"></div>\n                            </div>\n                            <div class=\"flex-shrink-0 w-6 h-6 rounded-full mt-10 sm:mt-0 inline-flex items-center justify-center bg-indigo-500 text-white relative z-10 title-font font-medium text-sm\">5</div>\n                            <div class=\"flex-grow md:pl-8 pl-6 flex sm:items-center items-start flex-col sm:flex-row\">\n                                <div class=\"flex-shrink-0 w-24 h-24 bg-gray-800 text-indigo-400 rounded-full inline-flex items-center justify-center\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                                    </svg>\n                                </div>\n                                <div class=\"flex-grow sm:pl-6 mt-6 sm:mt-0\">\n                                    <h2 class=\"font-medium title-font text-white mb-1 text-xl\">Undisclosed phase 2</h2>\n                                    <p class=\"leading-relaxed\">Something special will be here!</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"flex relative pb-20 sm:items-center w-full\">\n                            <div class=\"h-full w-6 absolute inset-0 flex items-center justify-center\">\n                                <div class=\"h-full w-1 bg-gray-800 pointer-events-none\"></div>\n                            </div>\n                            <div class=\"flex-shrink-0 w-6 h-6 rounded-full mt-10 sm:mt-0 inline-flex items-center justify-center bg-indigo-500 text-white relative z-10 title-font font-medium text-sm\">5</div>\n                            <div class=\"flex-grow md:pl-8 pl-6 flex sm:items-center items-start flex-col sm:flex-row\">\n                                <div class=\"flex-shrink-0 w-24 h-24 bg-gray-800 text-indigo-400 rounded-full inline-flex items-center justify-center\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                                    </svg>\n                                </div>\n                                <div class=\"flex-grow sm:pl-6 mt-6 sm:mt-0\">\n                                    <h2 class=\"font-medium title-font text-white mb-1 text-xl\">Undisclosed phase 3</h2>\n                                    <p class=\"leading-relaxed\">Something special will be here!</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div></div>\n    );\n}\n\nexport default Roadmap;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery, useMutation, useSubscription, gql } from '@apollo/client';\nconst NFT_DETAILS = gql`\nquery MyQuery ($id: Int!){\n    nft_by_pk(id: $id) {\n      id\n      name\n      source_image\n      price\n      gender\n      total_supplay\n      collection {\n        name\n      }\n\n    }\n  }\n`;\n\n\nfunction ReservationTimeLeft({}) {\n    const [remainingSeconds, setRemainingSeconds] = useState(2000);\n    const minutes = Math.floor(remainingSeconds / 60);\n    const seconds = remainingSeconds % 60;\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setRemainingSeconds(remainingSeconds-1);\n        }, 1000);\n        return () => clearTimeout(timer);\n    });\n    //WHen the counter reach 0 send and event and set the state\n    return <span className=\"font-bold\">{minutes} minutes, {seconds} seconds</span>;\n}\n\n\nfunction ReservationBlock(props) {\n    const [reserved, setReserved] = useState(false);\n\n    if (reserved) {\n        return <LimitedTimeReservation />\n    }\n\n    const reserve = () => {\n        setReserved(true);\n    }\n    return (\n        <div className=\"text-center\">\n            <p className=\"text-center mb-6 font-bold\">Be the owner of {props.item.name} for only {props.item.price} ADA</p>\n            <button class=\"transition text-white bg-yellow-600 border-0 py-2 px-8 focus:outline-none hover:bg-yellow-500 rounded text-lg\" onClick={reserve}>\n                <div className=\"flex gap-2 items-center font-bold\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\" />\n                    </svg>\n                    Reserve and Collect Now\n                </div>\n            </button></div>)\n}\n\nfunction LimitedTimeReservation() {\n    return (<div className=\"bg-black p-6 text-white\">\n        <h4 className=\"font-bold text-xl\">Hurray! You are just one step away to collect Yoda Master</h4>\n        <div className=\"mt-6 flex items-center gap-6\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 text-yellow-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <p>You have <ReservationTimeLeft /> to send the <span className=\"underline\">exact amount</span> of ADA to the address below:</p>\n        </div>\n        <div class=\"flex justify-between border-t border-gray-800 mt-6 py-2 items-center\">\n            <span class=\"text-gray-500 mr-4\">ADA</span>\n            <div className=\"flex items-center gap-2\">\n                <input type=\"text\" class=\"bg-gray-800 p-2 text-right\" readonly value=\"170.12\" />\n                <a href=\"#\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" />\n                    </svg>\n                </a>\n            </div>\n        </div>\n\n        <div class=\"flex border-t border-gray-800 py-2 items-center\">\n            <span class=\"text-gray-500 mr-4\">Address</span>\n            <div className=\"flex flex-1 items-center gap-2\">\n                <textarea class=\"resize-none bg-gray-800 p-2 text-right w-full\" readonly value=\"addr1sdkflsdlkj23sdlfjsdklfjlsdjflksdfklsjdlkfjlksdjklfjsdklfjlkdsfj\" />\n                <a href=\"#\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\" />\n                    </svg>\n                </a>\n            </div>\n        </div>\n    </div>);\n}\n\nfunction NftDetails() {\n    const { id } = useParams();\n\n    const { loading, error, data } = useQuery(NFT_DETAILS, { variables: { id: id } });\n    if (loading) {\n        return <p>Loading...</p>\n    }\n\n    if (error) {\n        console.log(error);\n        return <div className=\"bg-gray-900\">\n            <div className=\"text-gray-400 mx-auto max-w-7xl p-6\">\n                <p>Error. {error}, Please refresh.</p>\n            </div></div>\n    }\n\n    const item = data.nft_by_pk;\n    return (\n        <div className=\"bg-gray-900\">\n            <div className=\"text-gray-400 mx-auto max-w-7xl p-6\">\n                <h2 className=\"section-title\">Galgo Details</h2>\n\n                <section class=\"max-w-7xl text-gray-400 bg-gray-900 body-font overflow-hidden mx-auto\">\n                    <div class=\"mx-auto\">\n                        <div class=\"flex flex-wrap\">\n                            <div class=\"lg:w-1/2 w-full lg:pr-10 lg:py-6 mb-6 lg:mb-0\">\n                                <h2 class=\"text-sm title-font text-gray-500 tracking-widest\">THE GALGOS</h2>\n                                <h1 class=\"text-white text-3xl title-font font-medium mb-4\">{item.name} <span class=\"text-xl\"></span></h1>\n                                <div class=\"flex mb-4\">\n                                    <a class=\"flex-grow text-blue-400 border-b-2 border-blue-500 py-2 text-lg px-1\">Details</a>\n\n                                </div>\n                                <p class=\"leading-relaxed mb-4\">{item.name} from the <span class=\"font-bold\">{item.collection.name}</span> collection.</p>\n                                <div class=\"flex border-t border-gray-800 py-2\">\n                                    <span class=\"text-gray-500\">Color variation</span>\n                                    <span class=\"ml-auto text-white\">Standard</span>\n                                </div>\n                                <div class=\"flex border-t border-gray-800 py-2\">\n                                    <span class=\"text-gray-500\">Gender</span>\n                                    <span class=\"ml-auto text-white\"><a href=\"\">{item.gender}</a></span>\n                                </div>\n                                <div class=\"flex border-t border-gray-800 py-2\">\n                                    <span class=\"text-gray-500\">Owners</span>\n                                    <span class=\"ml-auto text-white\"><a href=\"\">{item.owner}</a></span>\n                                </div>\n                                <div class=\"flex border-t border-gray-800 py-2\">\n                                    <span class=\"text-gray-500\">Rarity</span>\n                                    <span class=\"ml-auto text-white\">Epic</span>\n                                </div>\n                                <div class=\"flex border-t border-gray-800 py-2\">\n                                    <span class=\"text-gray-500\">Collection</span>\n                                    <span class=\"ml-auto text-white\">{item.collection.name}</span>\n                                </div>\n                                <div class=\"flex border-t border-gray-800 py-2\">\n                                    <span class=\"text-gray-500\">Pack number</span>\n                                    <span class=\"ml-auto text-white\">1</span>\n                                </div>\n                                <div class=\"flex border-t border-b mb-6 border-gray-800 py-2\">\n                                    <span class=\"text-gray-500\">Suplay</span>\n                                    <span class=\"ml-auto text-white\">2 of {item.total_supplay} lefts</span>\n                                </div>\n\n                                <div class=\"flex mb-4\">\n                                    <a class=\"flex-grow text-blue-400 border-b-2 border-blue-500 py-2 text-lg px-1\">Collect Now</a>\n                                </div>\n                                <ReservationBlock item={item} />\n\n                            </div>\n                            <img alt={item.name} class=\"w-1/2\"\n                                src={\"/images/nfts/\" + item.source_image} />\n                        </div>\n                    </div>\n                </section>\n\n\n\n\n            </div>\n\n\n\n        </div>\n    );\n}\n\nexport default NftDetails;\n\n","function CommingSoon() {\n    return (\n        <div>\n        <section class=\"text-gray-200 bg-gray-900 body-font\">\n            \n            <div class=\"container mx-auto flex px-5 py-20 items-center justify-center flex-col\">\n                <img class=\"lg:w-2/6 md:w-3/6 w-5/6 mb-4 object-cover object-center rounded-xl\" alt=\"hero\" src=\"images/the-galgos-comming-soon.png\" />\n                <h1 class=\"text-8xl brand-text\">The Galgos</h1>\n                <div class=\"text-center mt-6\">\n                    <h1 class=\"title-font text-2xl mb-4 font-bold uppercase\">NFTs on Cardano Blockchain</h1>\n                    <p class=\"title-font text-xl mt-10 font-extrabold text-white\">- COMMING SOON -</p>\n                </div>\n            </div>\n        </section>\n        <section class=\"bg-black flex justify-center p-10\">\n            <img class=\"w-20\" src=\"images/cardano-1500.webp\" />\n        </section>\n        </div>   \n    )\n}\n\nexport default CommingSoon","import logo from './logo.svg';\nimport Faq from './Faq';\nimport Footer from './Footer';\nimport Stats from './Stats';\nimport Header from './Header';\nimport About from './About';\nimport Home from './Home';\nimport Collection from './Collection';\nimport Roadmap from './Roadmap';\nimport NftDetails from './NftDetails';\nimport CommingSoon from './CommingSoon';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport { useQuery, useMutation, useSubscription, gql } from '@apollo/client';\nconst EXCHANGE_RATES = gql`\nquery nfts {\n  nft(limit: 10, order_by: {name: asc}) {\n    id\n    name\n    price\n    reserved_by\n    reserve_expires_at\n  }\n}`;\n\n// TODO: Implement a mutation on the server side just for the reservation.\n\nconst UPDATE_NFT = gql`\nmutation updateNftByPk ($id: numeric!, $reserved_by: String!){\n  update_nft_by_pk(pk_columns: {id: $id}, _set: {reserved_by: $reserved_by}) {\n    id\n    reserved_by\n  }\n}\n`;\n\nconst RESERVATION_SUBSCRIPTION = gql `\nsubscription OnReservation {\n  nft {\n    id\n    reserved_by\n  }\n}\n`\n\nfunction ExchangeRates() {\n  const { loading, error, data } = useQuery(EXCHANGE_RATES);\n  const [updateNft, { loading: mutationLoading, error: mutationError }] = useMutation(UPDATE_NFT);\n  const { data: data2, loadingSubscription } = useSubscription(RESERVATION_SUBSCRIPTION);\n  console.log(\"data2\", data2);\n\n  const reserve = (id) => {\n    console.log(id);\n  }\n\n  console.log(data);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <div className=\"grid grid-cols-1 gap-4\">\n      {\n        data.nft.map(({ id, name, reserved_by, reserve_expires_at }) => (\n          <div className=\"bg-white max-w-max p-4\" key={id}>\n            <p>\n              {name} {reserved_by} {reserve_expires_at}\n            </p>\n            {reserved_by\n              ? <span>Reserved</span>\n              : <button className=\"bg-blue-500 px-4 py-2 text-white\" onClick={() => updateNft({ variables: { id, reserved_by: \"clarita\" } })}>Reserve\n              \n              \n              {mutationLoading && <p>Loading...</p>}\n              {mutationError && <p>Error :( Please try again</p>}\n              </button>\n            }\n          </div>\n\n        ))}</div>)\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/collection\">\n            <Collection />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/faq\">\n            <Faq />\n          </Route>\n          <Route path=\"/roadmap\">\n            <Roadmap />\n          </Route>\n          <Route path=\"/nft-details/:id\">\n            <NftDetails />\n          </Route>\n          <Route path=\"/\">\n            <CommingSoon />\n          </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport settingsReducer from './features/settings/settingsSlice'\n\nexport default configureStore({\n    reducer: {\n        settings: settingsReducer\n    },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport CommingSoon from './CommingSoon';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { split, HttpLink } from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\n\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:8080/v1/graphql',\n});\n\nconst wsLink = new WebSocketLink({\n  uri: 'ws://localhost:8080/v1/graphql',\n  options: {\n    reconnect: true\n  }\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\n\nconst client = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache()\n});\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <CommingSoon />\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}